local assetHelper = asset.require('util/asset_helper')
local transforms = asset.require('./transforms')
local sunTransforms = asset.require('scene/solarsystem/sun/transforms')
local earthTransforms = asset.require('scene/solarsystem/planets/earth/transforms')



local BENNU_BODY = "2101955"

local OsirisRexTrailEarth = {
    Name = "OsirisRexTrailEarth",
    Parent = earthTransforms.EarthIAU.Name,
    Renderable = {
        Type = "RenderableTrailTrajectory",
        Translation = {
            Type = "SpiceTranslation",
            Target = "OSIRIS-REX",
            Frame = "IAU_EARTH",
            Observer = "EARTH"
        },
        Color = { 0.9, 0.9, 0.0 },
        StartTime = "2016 SEP 8 23:05:00.50",
        EndTime = "2016 SEP 9 00:05:00",
        SampleInterval = 60
    },
    GuiPath = "/Solar System/Missions/OSIRIS REx"
}

local OsirisRexTrailSolarSystem = {
    Name = "OsirisRexTrailSolarSystem",
    Parent = sunTransforms.SolarSystemBarycenter.Name,
    Renderable = {
        Type = "RenderableTrailTrajectory",
        Translation = {
            Type = "SpiceTranslation",
            Target = "OSIRIS-REX",
            Observer = "SUN"
        },
        Color = { 0.2, 0.9, 0.2 },
        StartTime = "2016 SEP 8 23:05:00.50",
        EndTime = "2023 SEP 24 12:00:00",
        SampleInterval = 3600
    },
    GuiPath = "/Solar System/Missions/OSIRIS REx"
}

local OsirisRexTrailBennu = {
    Name = "OsirisRexTrailBennu",
    Parent = transforms.BennuBarycenter.Name,
    Renderable = {
        Type = "RenderableTrailTrajectory",
        Translation = {
            Type = "SpiceTranslation",
            Target = "OSIRIS-REX",
            Observer = BENNU_BODY
        },
        Color = { 0.9, 0.2, 0.9 },
        StartTime = "2018 SEP 4 00:00:00",
        EndTime = "2023 SEP 24 12:00:00",
        SampleInterval = 3600
    },
    GuiPath = "/Solar System/Missions/OSIRIS REx"
}



assetHelper.registerSceneGraphNodesAndExport(asset, {
    OsirisRexTrailEarth,
    OsirisRexTrailSolarSystem,
    OsirisRexTrailBennu
})
