return {
    -- Determines which SGCT configuration file is loaded, that is, if there rendering
    -- occurs in a single window, a fisheye projection, or a dome cluster system
    SGCTConfig = "${SGCT}/single.xml",
    --SGCTConfig = "${SGCT}/single_fisheye.xml",
    --SGCTConfig = "${SGCT}/two_nodes.xml",

    -- Sets the scene that is to be loaded by OpenSpace. A scene file is a description
    -- of all entities that will be visible during an instance of OpenSpace
    Scene = "${OPENSPACE_DATA}/scene/default_nh.scene",

    Paths = {
        SGCT = "${BASE_PATH}/config/sgct",
        SCRIPTS = "${BASE_PATH}/scripts",
        SHADERS = "${BASE_PATH}/shaders",
        SHADERS_GENERATED = "${SHADERS}/generated",
        OPENSPACE_DATA = "${BASE_PATH}/openspace-data",
        MODULES = "${BASE_PATH}/modules",
        TESTDIR = "${BASE_PATH}/tests",
        CONFIG = "${BASE_PATH}/config",
        CACHE = "${BASE_PATH}/cache",
        FONTS = "${OPENSPACE_DATA}/fonts",
        PLUTO_KERNELS = "${OPENSPACE_DATA}/spice/Pluto",
        JP_KERNELS = "${OPENSPACE_DATA}/spice/JP_KERNELS"
    },
    SpiceKernel = {
        Time = "${OPENSPACE_DATA}/spice/naif0010.tls",
        LeapSecond = "${OPENSPACE_DATA}/spice/pck00010.tpc",
        NewHorizons = "${OPENSPACE_DATA}/spice/nhmeta.tm"
    },
    Fonts = {
        Mono = "${FONTS}/Droid_Sans_Mono/DroidSansMono.ttf",
        Light = "${FONTS}/Roboto/Roboto-Regular.ttf"
    },
    StartupScripts = {
        "${SCRIPTS}/default_startup.lua"
    },
    SettingsScripts = {
        "${SCRIPTS}/default_settings.lua"
    },
    Logging = {
        LogLevel = "Debug",
        ImmediateFlush = true,
        Logs = {
            { Type = "HTML", FileName = "${BASE_PATH}/log.html", Append = false }
        }
    },
    LuaDocumentationFile = {
        Type = "text",
        File = "${BASE_PATH}/LuaScripting.txt"
    },
    PropertyDocumentationFile = {
        Type = "text",
        File = "${BASE_PATH}/Properties.txt"
    },
    RenderingMethod = "ABufferSingleLinked" -- On Windows and Unix
    -- RenderingMethod = "ABufferFrameBuffer" -- On Mac due to OpenGL 4.1 restrictions
}