asset.require('spice/base')

local sceneHelper = asset.require('util/scenehelper')
local Earth = asset.require('earth/earth')
--local Mars = asset.require('mars/mars')
--local Moon = asset.require('moon/moon')

asset.request('collections/solarsystem')

-- Add folders to this list that contain .info files describing HiRISE patches
local vrt_folders = {
    Mars = {
        -- Add folders here whose contents will be automatically added to the Mars globe
        -- If multiple folders are added, the results will be added sequentially, meaning that
        -- if areas overlap (for example CTX and HiRISE) and CTX is specified *after* HiRISE,
        -- CTX will stomp over the HiRISE
        --
        -- tl;dr:  Specify CTX folders first, then HiRISE 
        -- example:   'C:/OpenSpace/GlobeBrowsingData/Mars/CTX'
    },
    Moon = {
        -- Add folders here whose contents will be automatically added to the Moon globe
        -- If multiple folders are added, the results will be added sequentially, meaning that
        -- if areas overlap, images from the lower results will overwrite the images from former
        -- results
        -- example:  'C:/OpenSpace/GlobeBrowsingData/Moon'
    }
}

asset.onInitialize(function ()
    openspace.set_default_dashboard()
    openspace.time.setTime(openspace.time.currentWallTime())
    dofile(openspace.absPath('${SCRIPTS}/bind_common_keys.lua'))

    -- Toggle night texture, shading, atmosphere and water
    openspace.bindKey("s",
        helper.property.invert('Earth.RenderableGlobe.Layers.NightLayers.Earth at Night 2012.Enabled') ..
        helper.property.invert('Earth.RenderableGlobe.PerformShading') ..
        helper.property.invert('Earth.RenderableGlobe.Atmosphere') ..
        helper.property.invert('Earth.RenderableGlobe.Layers.WaterMasks.MODIS_Water_Mask.Enabled'),
        "Toggle night texture, shading, atmosphere, and water for Earth."
    )

    -- Toggle background
    openspace.bindKey("b",
        helper.property.invert('MilkyWay.renderable.Enabled') ..
        helper.property.invert('Stars.renderable.Enabled'),
        "Toggle background (Stars and Milkyway)."
    )

    openspace.bindKey("g",
        helper.property.invert('MilkyWay.renderable.Enabled') ..
        helper.property.invert('Stars.renderable.Enabled') ..
        helper.property.invert('Earth.RenderableGlobe.Layers.NightLayers.Earth at Night 2012.Enabled') ..
        helper.property.invert('Earth.RenderableGlobe.PerformShading') ..
        helper.property.invert('Mars.RenderableGlobe.PerformShading') ..
        helper.property.invert('Earth.RenderableGlobe.Atmosphere') ..
        helper.property.invert('Earth.RenderableGlobe.Layers.WaterMasks.MODIS_Water_Mask.Enabled') ..
        helper.property.invert('Moon.RenderableGlobe.Enabled') ..
        helper.property.invert('Sun.renderable.Enabled'),
        "Toogles background and shading mode on the Earth and Mars alongside visibility of the Moon and the Sun"
    )

    openspace.bindKey("h",
        "openspace.setPropertyValue('*Trail.renderable.Enabled', false)",
        "Disables visibility of the trails"
    )

    openspace.globebrowsing.loadWMSServersFromFile(
        openspace.absPath("${OPENSPACE_DATA}/globebrowsing_servers.lua")
    )

    openspace.mark_interesting_nodes({
        Earth.Earth.Name --, Mars.Name, Moon.Name
    })

    openspace.set_default_gui_sorting()

    openspace.addVirtualProperty(
        "BoolProperty",
        "Show Trails",
        "*Trail.renderable.Enabled",
        "Disable or enable all trails of the scene at the same time",
        true,
        nil,
        nil
    )

    openspace.printInfo("Setting default values")

    openspace.setPropertyValueSingle("Global Properties.GlobeBrowsing.GdalWrapper.LogGdalErrors", false)

    openspace.setPropertyValueSingle("Earth.RenderableGlobe.Debug.LevelByProjectedAreaElseDistance", false)

    openspace.navigation.setCameraState({
        Focus = Earth.Earth.Name,
        Position = {0, 0, 0},
        Rotation = {0.758797, 0.221490, -0.605693, -0.091135},
    })

    openspace.globebrowsing.goToGeo(58.5877, 16.1924, 20000000)

    openspace.printInfo("Done setting default values")

        -- Add local patches described at the top of this file
    for obj, list in pairs(vrt_folders) do
        for _, dir in pairs(list) do
            openspace.globebrowsing.addBlendingLayersFromDirectory(dir, obj)
        end
    end
end)
