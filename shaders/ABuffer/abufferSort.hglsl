
// texture bindings
layout (binding = 0, r32ui) uniform uimage2D anchorPointerTexture;
layout (binding = 1, rgba32ui) uniform uimageBuffer fragmentTexture;

// atomic buffer bindings
layout (binding = 0, offset = 0) uniform atomic_uint atomicCounterBuffer;

int build_local_fragments_list() {
	uint current;
	int frag_count = 0;

	current = imageLoad(anchorPointerTexture, ivec2(gl_FragCoord.xy)).x;

	while(current != 0 && frag_count < MAX_FRAGMENTS) {
		ABufferStruct_t item = _ABufferStruct_t_(imageLoad(fragmentTexture, int(current)));
		current = _next_(item);

		fragments[frag_count] = item;

		frag_count++;
	}

	return frag_count;
}

void sort_fragments_list(uint frag_count) {
	uint i,j;
	ABufferStruct_t tmp;

	// INSERTION SORT
	for(i = 1; i < frag_count; ++i) {
		tmp = fragments[i];
		for(j = i; j > 0 && _z_(tmp) < _z_(fragments[j-1]); --j) {
			fragments[j] = fragments[j-1];
		}
		fragments[j] = tmp;
	}
}
