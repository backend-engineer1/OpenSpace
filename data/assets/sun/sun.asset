local assetHelper = asset.require('util/assethelper')
local transforms = asset.require('./transforms')

local sunParentName = transforms.SunIau.Name;

local texturesPath = asset.syncedResource({
    Type = "HttpSynchronization",
    Name = "Sun textures",
    Identifier = "sun_textures",
    Version = 3
})

--asset.addSynchronization({
--    Type = "TorrentSynchronization",
--   Destination = texturesPath,
--    File = "torrentFilePath.torrent",
--})

-- Simple sphere to represent the Sun
local Sun = {
    Name = "Sun",
    Renderable = {
        Parent = sunParentName,
        Type = "RenderablePlanet",
        Frame = "IAU_SUN",
        Body = "SUN", 
        Geometry = {
            Type = "SimpleSphere",
            Radius = 6.957E8,
            Segments = 100
        },
        ColorTexture = texturesPath .. "/sun.jpg",
        PerformShading = false,
    }
}

-- Billboard to represent the sun
local SunGlare = {
    Name = "SunGlare",
    Parent = sunParentName,
    Renderable = {
        Type = "RenderablePlane",
        Size = 1.3*10^10.5,
        Origin = "Center",
        Billboard = true,
        Texture = texturesPath .. "/darkuniverse_glare.png",
        BlendMode = "Additive"
    }
}

-- Marker for the sun
local SunMarker = {
    Name = "SunMarker",
    Parent = Sun.Name,
    Renderable = {
        Type = "RenderablePlane",
        Size = 3.0E11,
        Origin = "Center",
        Billboard = true,
        Texture = texturesPath .. "/marker.png",
        BlendMode = "Additive"
    },
    Transformation = {
        Translation = {
            Type = "StaticTranslation",
            Position = {0, 0, 0, 5}
        }
    }
}

assetHelper.registerSceneGraphNodes(asset, {
    Sun,
    SunGlare,
    SunMarker
})

asset.export("Sun", Sun)
asset.export("SunGlare", SunGlare)
asset.export("SunMarker", SunMarker)
