local transforms = asset.require('../transforms')
local assetHelper = asset.require('util/asset_helper')
asset.require("spice/base")
asset.request('./trail')
local kernels = asset.require('../sat375').Kernels



-- local textures = asset.syncedResource({
--     Name = "Hyperion textures",
--     Type = "HttpSynchronization",
--     Identifier = "hyperion_textures",
--     Version = 1
-- })

local Hyperion = {
    Name = "Hyperion",
    Parent = transforms.SaturnBarycenter.Name,
    Transform = {
        Translation = {
            Type = "SpiceTranslation",
            Target = "HYPERION",
            Observer = "SATURN BARYCENTER",
            Kernels = kernels .. "/sat375.bsp"
        },
        Rotation = {
            Type = "SpiceRotation",
            SourceFrame = "IAU_HYPERION",
            DestinationFrame = "GALACTIC"
        }
    },
    Renderable = {
        Type = "RenderableGlobe",
        Radii = { 360200, 266000, 205400},
        SegmentsPerPatch = 64,
        Layers = {
            -- ColorLayers = {
            --     {
            --         Name = "Hyperion Texture",
            --         FilePath = textures .. "/hyperion.jpg",
            --         Enabled = true
            --     }
            -- }
        }
    },
    Tag = { "moon_solarSystem", "moon_giants", "moon_saturn" },
    GuiPath = "/Solar System/Planets/Saturn/Moons"
}



assetHelper.registerSceneGraphNodesAndExport(asset, { Hyperion })
