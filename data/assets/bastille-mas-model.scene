asset.require('./base')

local assetHelper = asset.require('util/asset_helper')
local propertyHelper = asset.require('util/property_helper')
local sceneHelper = asset.require('util/scene_helper')

asset.require('util/default_dashboard')

asset.require('scene/solarsystem/sun/magnetogram_textures')
asset.require('scene/solarsystem/sun/streamnodeslegend')
asset.require('scene/solarsystem/sun/streamnodescutplane')
--asset.require('scene/solarsystem/sun/streamnodes_sphere')
--asset.require('examples/debugcoordinateaxes.asset')
local suncameraState = asset.require('scene/solarsystem/sun/heliosphere/mas/bastille_day/Camerapositions/Earthpos');
local earthcameraState = asset.require('scene/solarsystem/sun/heliosphere/mas/bastille_day/Camerapositions/SunPos');
local sunAsset = asset.require('scene/solarsystem/sun/sun');    --heliosphere/mas/bastille_day/
--local streamnodesAsset = asset.require('scene/solarsystem/sun/heliosphere/mas/bastille_day/streamnodes');
assetHelper.requestAll(asset, 'scene/solarsystem/sun/heliosphere')
asset.require('scene/solarsystem/planets/earth/satellites/satellites')
asset.require('scene/solarsystem/planets/earth/satellites/misc/iss')
asset.require('scene/solarsystem/planets/earth/magnetosphere')

-- must be >0
-- the textureIndex variable is used to select a texture from a list of textures 
textureIndex = 2;
Endtime1 = "2000 JUL 14 19:00:00";
Starttimescript = "openspace.time.setTime('2000 JUL 14 08:38:27')";
StarttimescriptSlowLoop = "openspace.time.setTime('2000 JUL 14 10:03:00')";
StarttimescriptLongLoop = "openspace.time.setTime('2000 JUL 14 09:30:00')";
Mercuryenabledscript = "openspace.setPropertyValueSingle('Scene.Cutplane_sphere_mercury.Renderable.Opacity', 1.00000, 3)";
Earthenabledscript = "openspace.setPropertyValueSingle('Scene.Cutplane_sphere.Renderable.Opacity', 1.000000, 5)";
Venusenabledscript = "openspace.setPropertyValueSingle('Scene.Cutplane_sphere_venus.Renderable.Opacity', 1.000000, 10)";
Mercurydisabledscript = "openspace.setPropertyValueSingle('Scene.Cutplane_sphere_mercury.Renderable.Opacity', 0.00000)";
Earthdisabledscript = "openspace.setPropertyValueSingle('Scene.Cutplane_sphere.Renderable.Opacity', 0.00000)";
Venusdisabledscript = "openspace.setPropertyValueSingle('Scene.Cutplane_sphere_venus.Renderable.Opacity', 0.00000)";
starttimeMercury = "2000 JUL 14 10:20:00";
starttimeVenus = "2000 JUL 14 10:28:00";
starttimeEarth = "2000 JUL 14 10:40:00";
EndtimeSlowLoop = "2000 JUL 14 11:00:00";
EndtimeFastLoop = "2000 JUL 14 12:00:00";
EndtimeShortLoop = "2000 JUL 14 10:16:00";
EndtimeLongLoop = "2000 JUL 14 11:50:00";

--script20 = "scene/solarsystem/sun/heliosphere/mas/bastille_day/Camerapositions/Sun";
--script21 = "scene/solarsystem/sun/heliosphere/mas/bastille_day/Camerapositions/Earth";

local Keybindings = {
    {
        Key = "F2",
        Name = "Show Flux Value Legend",
        Command = "openspace.setPropertyValueSingle('ScreenSpace.Legendstreamnodes.Enabled', true);",
		Documentation = "Show the legend image",
        Local = true
    },
    {
        Key = "F3",
        Name = "Show Flux Value Legend",
        Command = "openspace.setPropertyValueSingle('ScreenSpace.Legendstreamnodes.Enabled', false);",
		Documentation = "Hides the legend image",
        Local = true
    },
    {
		Key = "F4",
		Name = "Change to Earth focus",
		Command = 
			"openspace.setPropertyValueSingle('Scene.MAS_MHD_StreamNodes.Renderable.Earthfocus.distancePlanetThreshold', 155022826061.149994);"..
			"openspace.setPropertyValueSingle('Scene.MAS_MHD_StreamNodes.Renderable.Earthfocus.enhanceMethod', 0.000000);"..
			"openspace.setPropertyValueSingle('NavigationHandler.OrbitalNavigator.Aim', '');"..
			"openspace.setPropertyValueSingle('NavigationHandler.OrbitalNavigator.Anchor', 'Earth');"..
			"openspace.navigation.loadNavigationState('Earth');"..
			"openspace.setPropertyValueSingle('NavigationHandler.OrbitalNavigator.RetargetAnchor', nil);",
		Documentation = "Start to focus on Earth",
		Name = "Focus on Earth",
		GuiPath = "/CCMC/Nodes",
		Local = false
	},
	{
		Key = "Shift+r",
		Command =
			"openspace.setPropertyValueSingle('Scene.MAS_MHD_StreamNodes.Renderable.Color.colorMode', 0.000000);" ..
			"openspace.setPropertyValueSingle('Scene.MAS_MHD_StreamNodes.Renderable.NodeGroup.skippingNodes', 1.000000);" ..
			"openspace.setPropertyValueSingle('Scene.MAS_MHD_StreamNodes.Renderable.NodeGroup.amountOfNodes', 1.000000);" ..
			--"openspace.setPropertyValueSingle('Scene.MAS_MHD_StreamNodes.Renderable.Color.fluxColorAlpha', 1.000000);" ..
			"openspace.setPropertyValueSingle('Scene.MAS_MHD_StreamNodes.Renderable.Color.fluxColorAlphaIlluminance', 1.000000);" ..
			"openspace.setPropertyValueSingle('Scene.MAS_MHD_StreamNodes.Renderable.NodeGroup.nodeSkip', 1.000000);" ..
			"openspace.setPropertyValueSingle('Scene.MAS_MHD_StreamNodes.Renderable.NodeGroup.nodeSize', 2.000000);" ..
			"openspace.setPropertyValueSingle('Scene.MAS_MHD_StreamNodes.Renderable.NodeGroup.nodeSizeLargerFlux', 2.00000);" ..
			"openspace.setPropertyValueSingle('Scene.MAS_MHD_StreamNodes.Renderable.NodeGroup.skippingNodesByFlux', 0.000000);" ..
			"openspace.setPropertyValueSingle('Scene.MAS_MHD_StreamNodes.Renderable.NodeGroup.skippingNodesByRadius', 0.000000);" ..
			"openspace.setPropertyValueSingle('Scene.MAS_MHD_StreamNodes.Renderable.Streams.thresholdFlux', 0.800000);" ..
			"openspace.setPropertyValueSingle('Scene.MAS_MHD_StreamNodes.Renderable.Streams.filterLower', 0.000000);" ..
			"openspace.setPropertyValueSingle('Scene.MAS_MHD_StreamNodes.Renderable.Streams.zLimit', {-2.00000,2.000000});" ..
			"openspace.setPropertyValueSingle('Scene.MAS_MHD_StreamNodes.Renderable.Earthfocus.distancePlanetThreshold', 0.000000);"..
			"openspace.setPropertyValueSingle('NavigationHandler.OrbitalNavigator.Aim', '');"..
			"openspace.setPropertyValueSingle('NavigationHandler.OrbitalNavigator.Anchor', 'Sun');"..
			"openspace.setPropertyValueSingle('NavigationHandler.OrbitalNavigator.RetargetAnchor', nil);"..
			--"openspace.navigation.loadNavigationState('Sun');"..
			"openspace.setPropertyValueSingle('Scene.MAS_MHD_StreamNodes.Renderable.Streams.zLimit', {-2.00000,2.000000});" ..
			"openspace.setPropertyValueSingle('Scene.MAS_MHD_StreamNodes.Renderable.Streams.filterUpper', 5.000000);",
			--"Todo, fix the last one which is on the z axis"
			--"openspace.setPropertyValueSingle('Scene.MAS_MHD_StreamNodes.Renderable.Streams.limitsZLower', {--358139527168.969971,953488375808.000000});",
			Documentation = "Resets the visualisation of streamnodes",
		    Name = "Reset Streamnodes Vis back",
		    GuiPath = "/CCMC/Nodes",
		    Local = false
	},
    {
        Key = "F6",
        Command = propertyHelper.invert('Scene.MAS_MHD_density.Renderable.Enabled'),
        Documentation = "Toggle volume",
        Local = false
    },
    {
		Key = "F7",
		Command = "openspace.scriptScheduler.loadScheduledScript(EndtimeSlowLoop, StarttimescriptSlowLoop)",
		Documentation = "Loop time 10:03 - 11:00",
		Name = "Loop Nodedata time 10:03 - 11:00",
		GuiPath = "/CCMC/Nodes",
	    Local = false
    },
    {
		Key = "F8",
	    Command = "openspace.scriptScheduler.loadScheduledScript(Endtime1, Starttimescript)",
	    Documentation = "Loop time 08:34- 19:34",
		Name = "Loop Nodedata time 08:34 - 19:34",
		GuiPath = "/CCMC/Nodes",
	    Local = false
    },
    {
		Key = "F9",
	    Command = "openspace.scriptScheduler.clear()",
	    Documentation = "Clear scriptScheduler",
		Name = "Clear loopscripts",
		GuiPath = "/CCMC/Nodes",
	    Local = false
    },
    {
		Key = "F10",
		Command = "openspace.time.setTime('2000-JUL-14 10:03:00.00')",
		Documentation = "Restart button for CME",
		Name = "Restart button to start of CME",
		GuiPath = "/CCMC/Nodes",
        Local = false
    },
    {
    	Key = "F11",
	    Command = 
            "openspace.setPropertyValueSingle('Scene.EarthAtmosphere.Renderable.SunFollowingCamera', true);" ..
            "openspace.setPropertyValueSingle('Scene.Moon.Renderable.PerformShading', false);" ..
            "openspace.setPropertyValueSingle('Scene.Earth.Renderable.Layers.NightLayers.Earth_at_Night_2012.Enabled', false);" ..
            "openspace.setPropertyValueSingle('Scene.EarthAtmosphere.Renderable.SunIntensity', 15.000000);",
	    Documentation = "Sun artificially placed, remove shadow on Earth and Moon",
	    Name = "Earth and moon without shadow",
	    GuiPath = "/CCMC/Nodes",
	    Local = false
    },
    {
    	Key = "Shift+q",
	    Command = 
	        "openspace.setPropertyValueSingle('Scene.MercuryTrail.Renderable.Appearance.EnableFade', true);" ..
            "openspace.setPropertyValueSingle('Scene.MercuryTrail.Renderable.Appearance.Color', {0.700000,0.700000,0.700000});" ..
            "openspace.setPropertyValueSingle('Scene.MercuryTrail.Renderable.Appearance.LineWidth', 10.000000)" ..
            "openspace.setPropertyValueSingle('Scene.MercuryTrail.Renderable.Appearance.Fade', 2.270000);" ..

            "openspace.setPropertyValueSingle('Scene.MarsTrail.Renderable.Appearance.EnableFade', true);" ..
            "openspace.setPropertyValueSingle('Scene.MarsTrail.Renderable.Appearance.LineWidth', 10.000000);" ..
            "openspace.setPropertyValueSingle('Scene.MarsTrail.Renderable.Appearance.Fade', 2.710000);" ..

            "openspace.setPropertyValueSingle('Scene.VenusTrail.Renderable.Appearance.EnableFade', true);" ..
            "openspace.setPropertyValueSingle('Scene.VenusTrail.Renderable.Appearance.LineWidth', 10.000000);" ..
            "openspace.setPropertyValueSingle('Scene.VenusTrail.Renderable.Appearance.Fade', 1.830000);" ..

            "openspace.setPropertyValueSingle('Scene.EarthTrail.Renderable.Appearance.EnableFade', true);" ..
            "openspace.setPropertyValueSingle('Scene.EarthTrail.Renderable.Appearance.LineWidth', 10.000000);" ..
            "openspace.setPropertyValueSingle('Scene.EarthTrail.Renderable.Appearance.Fade', 3.440000);" ..

            "openspace.setPropertyValueSingle('Scene.MoonTrail.Renderable.Appearance.Color', {1.000000,1.000000,1.000000});" ..
            "openspace.setPropertyValueSingle('Scene.MoonTrail.Renderable.Appearance.LineWidth', 10.00000);" ..
            "openspace.setPropertyValueSingle('Scene.MoonTrail.Renderable.Appearance.Fade', 5.420000);",

	    Documentation = "Appearance change for trails",
	    Name = "Appearance change for trails",
	    GuiPath = "/CCMC/Nodes",
	    Local = false
    },
    {
		Key = "Shift+s",
		Command =
			"openspace.scriptScheduler.clear();" ..
			"openspace.time.setDeltaTime(240);" ..
			"openspace.time.setTime('2000-JUL-14 10:03:00.00');" ..
			"openspace.scriptScheduler.loadScheduledScript(EndtimeSlowLoop, StarttimescriptSlowLoop);",
		Documentation = "New loop: Restarts time at 10:03 and stops at 11:00, delta time to 4 min/ second (240 seconds/ second)",
		Name = "Loop 10:03 - 11:00, delta time 4 min/ second",
		GuiPath = "/CCMC/Nodes",
        Local = false
    },
    {
		Key = "Shift+m",
		Command = 
			"openspace.scriptScheduler.clear();" ..
			"openspace.time.setDeltaTime(120);" ..
			"openspace.time.setTime('2000-JUL-14 10:03:00.00');" ..
			"openspace.scriptScheduler.loadScheduledScript(EndtimeShortLoop, StarttimescriptSlowLoop);",
		Documentation = "New loop: Restarts time at 10:03 and stops at 10:16, sets delta time to 2 min/ second (120 seconds/ second)",
		Name = "Loop 10:03 - 10:16, delta time 2 min/ second",
		GuiPath = "/CCMC/Nodes",
        Local = false
    },
    {
		Key = "Shift+d",
		Command = 
			"openspace.scriptScheduler.clear();" ..
			"openspace.time.setDeltaTime(240);" ..
			"openspace.time.setTime('2000-JUL-14 10:03:00.00');" ..
			"openspace.scriptScheduler.loadScheduledScript(starttimeEarth, StarttimescriptSlowLoop);",
		Documentation = "New loop: Restarts time at 10:03 and stops at 10:40, sets delta time to 4 min/ second (240 seconds/ second)",
		Name = "Loop 10:03 - 10:40, delta time 4 min/ second",
		GuiPath = "/CCMC/Nodes",
        Local = false
    },
    {
		Key = "Shift+y",
		Command = 
			"openspace.scriptScheduler.clear();" ..
			"openspace.time.setDeltaTime(240);" ..
			"openspace.time.setTime('2000-JUL-14 09:30:00.00');" ..
			"openspace.scriptScheduler.loadScheduledScript(EndtimeLongLoop, StarttimescriptLongLoop);",
		Documentation = "Long loop: Restarts time at 09:30 and stops at 11:50, delta time to 4 min/ second (240 seconds/ second)",
		Name = "Loop 09:30 - 11:50, delta time 4 min/ second",
		GuiPath = "/CCMC/Nodes",
        Local = false
    },
    {
		Key = "Shift+v",
		Command = 
			"openspace.scriptScheduler.clear();" ..
			"openspace.time.setDeltaTime(900);" ..
			"openspace.time.setTime('2000-JUL-14 10:03:00.00');" ..
			"openspace.scriptScheduler.loadScheduledScript(EndtimeFastLoop, StarttimescriptSlowLoop);",
		Documentation = "Fast loop: Starts from 10:03 and sets delta time to 15 min/ second (900 seconds/ second)",
		Name = "Starts from 10:03, delta time 15 min/ second",
		GuiPath = "/CCMC/Nodes",
        Local = false
    },
    {
		Key = "Shift+b",
		Command = 
			"openspace.setPropertyValueSingle('Scene.MAS_MHD_StreamNodes.Renderable.Streams.filterUpper', 5, 5);" ..
			"openspace.setPropertyValueSingle('Scene.MAS_MHD_StreamNodes.Renderable.Streams.thresholdFlux', -1);" ..
			"openspace.setPropertyValueSingle('Scene.MAS_MHD_Fieldlines.Renderable.Enabled', false);" ..
			"openspace.setPropertyValueSingle('Scene.MAS_MHD_StreamNodes.Renderable.NodeGroup.nodeSizeLargerFlux', 2.00000, 10);",	
		Documentation = "transition when zooming out nodes+cutplane, nmbr 12",
		Name = "Transition zooming out nodes + cutplane",
		GuiPath = "/CCMC/Nodes",
        Local = false
    },
    {
		Key = "Shift+t",
		Command = 
			--"openspace.setPropertyValueSingle('Scene.MAS_MHD_StreamNodes.Renderable.Streams.zLimit', {0.00000,0.000000});" ..
			"openspace.setPropertyValueSingle('Scene.Cutplane.Renderable.Enabled', true);" ..
			"openspace.setPropertyValueSingle('Scene.MAS_MHD_StreamNodes.Renderable.Earthfocus.distancePlanetThreshold', 0.000000, 5);" ..
			"openspace.setPropertyValueSingle('Scene.MAS_MHD_StreamNodes.Renderable.Earthfocus.enhanceMethod', 3.000000);" ..
			"openspace.setPropertyValueSingle('Scene.MAS_MHD_StreamNodes.Renderable.Color.fluxColorAlphaIlluminance', 0.0, 6);" ..
			"openspace.setPropertyValueSingle('Scene.Cutplane.Renderable.Opacity', 1.000000, 10);",	
		Documentation = "transition from nodes to cutplane",
		Name = "Transition nodevis to cutplane",
		GuiPath = "/CCMC/Nodes",
        Local = false
    },
      {
		Key = "Shift+n",
		Command = 
			"openspace.setPropertyValueSingle('Scene.MAS_MHD_StreamNodes.Renderable.Streams.zLimit', {-2.00000,2.000000});" ..
			"openspace.setPropertyValueSingle('Scene.MAS_MHD_StreamNodes.Renderable.Earthfocus.enhanceMethod', 3.000000);" ..
			"openspace.setPropertyValueSingle('Scene.MAS_MHD_StreamNodes.Renderable.Color.fluxColorAlphaIlluminance', 1, 5);" ..
			"openspace.setPropertyValueSingle('Scene.MAS_MHD_StreamNodes.Renderable.NodeGroup.nodeSkipEarth', 11.000000);" ..
			"openspace.setPropertyValueSingle('Scene.MAS_MHD_StreamNodes.Renderable. CameraPerspective.maxNodeSize', 40.0000);" ..
			"openspace.setPropertyValueSingle('Scene.MAS_MHD_StreamNodes.Renderable.Streams.thresholdFlux', -1.00000);" ..
			"openspace.setPropertyValueSingle('Scene.SunGlare.Renderable.Enabled', true);" ..
			"openspace.setPropertyValueSingle('NavigationHandler.OrbitalNavigator.Aim', '');" ..
			"openspace.setPropertyValueSingle('Scene.MAS_MHD_StreamNodes.Renderable.NodeGroup.amountOfNodes', 17.000000);" ..
			"openspace.setPropertyValueSingle('Scene.MAS_MHD_StreamNodes.Renderable. CameraPerspective.renderingcircles', true);" ..
			"openspace.setPropertyValueSingle('Scene.MAS_MHD_StreamNodes.Renderable. CameraPerspective.cameraPerspectiveEnabled', true);" ..
			"openspace.setPropertyValueSingle('ScreenSpace.Legendstreamnodes.Enabled', true);" ..
			"openspace.setPropertyValueSingle('NavigationHandler.OrbitalNavigator.Anchor', 'Earth');" ..
			"openspace.setPropertyValueSingle('NavigationHandler.OrbitalNavigator.RetargetAnchor', nil);" ..
			"openspace.setPropertyValueSingle('Scene.MAS_MHD_StreamNodes.Renderable.NodeGroup.nodeSkip', 17.000000);" ..
			"openspace.setPropertyValueSingle('Scene.MAS_MHD_StreamNodes.Renderable.Earthfocus.distancePlanetThreshold', 0.20000, 10);" ..
			"openspace.setPropertyValueSingle('Scene.MAS_MHD_StreamNodes.Renderable. CameraPerspective.minNodeSize', 3.00000);" ..
			"openspace.setPropertyValueSingle('Scene.Cutplane.Renderable.Opacity', 0.000000, 7);",	
		Documentation = "transition from cutplane to nodes",
		Name = "Transition cutplane to nodes",
		GuiPath = "/CCMC/Nodes",
        Local = false
    },
	 {
		Key = "Shift+c",
		Command = 
			"openspace.scriptScheduler.clear();",
			--"openspace.scriptScheduler.loadScheduledScript('2000-JUL-14 10:03:00.00', Mercurydisabledscript)"..
			--"openspace.scriptScheduler.loadScheduledScript('2000-JUL-14 10:03:00.00', Venusdisabledscript)"..
			--"openspace.scriptScheduler.loadScheduledScript('2000-JUL-14 10:03:00.00', Earthdisabledscript)"..
			--"openspace.time.setDeltaTime(120);" ..
			--"openspace.time.setTime('2000-JUL-14 10:03:00.00');" ..
			--"openspace.scriptScheduler.loadScheduledScript(starttimeMercury, Mercuryenabledscript);" ..
			--"openspace.scriptScheduler.loadScheduledScript(starttimeVenus, Venusenabledscript);" ..
			--"openspace.scriptScheduler.loadScheduledScript(starttimeEarth, Earthenabledscript);" ..
			--"openspace.setPropertyValueSingle('Scene.Cutplane_sphere_venus.Renderable.Opacity', 0.000000);" ..
			--"openspace.setPropertyValueSingle('Scene.Cutplane_sphere_mercury.Renderable.Opacity', 0.000000);" ..
			--"openspace.setPropertyValueSingle('Scene.Cutplane_sphere.Renderable.Opacity', 0.000000);" ..
			--"openspace.setPropertyValueSingle('Scene.Cutplane_sphere_mercury.Renderable.Enabled', true);" ..
			--"openspace.setPropertyValueSingle('Scene.Cutplane_sphere.Renderable.Enabled', true);" ..
			--"openspace.setPropertyValueSingle('Scene.Cutplane_sphere_venus.Renderable.Enabled', true);" ..
			--"openspace.scriptScheduler.loadScheduledScript(EndtimeSlowLoop, StarttimescriptSlowLoop);",				
		Documentation = "transition for the spheres",
		Name = "Sphereslices",
		GuiPath = "/CCMC/Nodes",
        Local = false
    },
    {
		Key = "Shift+e",
		Command =
			"openspace.setPropertyValueSingle('Scene.SunGlare.Renderable.Enabled', false);" ..
			"openspace.setPropertyValueSingle('Scene.MAS_MHD_Fieldlines.Renderable.lineWidth', 4.000000);" ..
			"openspace.setPropertyValueSingle('NavigationHandler.OrbitalNavigator.Anchor', 'focusPoint');" ..
			"openspace.setPropertyValueSingle('Scene.MAS_MHD_Fieldlines.Renderable.Enabled', true);" ..

			"openspace.setPropertyValueSingle('Scene.Sun.Renderable.Layers.ColorLayers.magnetogram-1.Enabled', false);" ..
			"openspace.setPropertyValueSingle('Scene.Sun.Renderable.Layers.ColorLayers.magnetogram-2.Enabled', false);" ..
			"openspace.setPropertyValueSingle('Scene.Sun.Renderable.Layers.ColorLayers.magnetogram-4.Enabled', false);" ..
			"openspace.setPropertyValueSingle('Scene.Sun.Renderable.Layers.ColorLayers.magnetogram-5.Enabled', false);" ..
			"openspace.setPropertyValueSingle('Scene.Sun.Renderable.Layers.ColorLayers.magnetogram-6.Enabled', false);" ..
			"openspace.setPropertyValueSingle('Scene.Sun.Renderable.Layers.ColorLayers.magnetogram-3.Enabled', true);",

		Documentation = "Turn off sun glare, turn on field lines, increase field lines line width, change layer on the Sun to magnetogram 3",
		Name = "Third transition Emilie",
		GuiPath = "/CCMC/Nodes",
        Local = false
    },
    {
		Key = "Shift+w",
		Command =
			"openspace.setPropertyValueSingle('Scene.SunGlare.Renderable.Enabled', true);" ..
			"openspace.setPropertyValueSingle('Scene.MAS_MHD_Fieldlines.Renderable.lineWidth', 1);" ..

			--"openspace.setPropertyValueSingle('Scene.Cutplane2.Renderable.Enabled', false);" ..
			"openspace.setPropertyValueSingle('Scene.Cutplane.Renderable.Enabled', false);" ..
			"openspace.setPropertyValueSingle('Scene.MAS_MHD_density.Renderable.Enabled', false);" ..
			"openspace.setPropertyValueSingle('Scene.MAS_MHD_Fieldlines.Renderable.Enabled', false);" ..
			"openspace.setPropertyValueSingle('Scene.MAS_MHD_StreamNodes.Renderable.Enabled', false);" ..
			"openspace.setPropertyValueSingle('Scene.SpeedofLight.Renderable.Enabled', false);" ..

			"openspace.setPropertyValueSingle('Scene.Earths_Magnetosphere.Renderable.Enabled', false);" ..
			"openspace.setPropertyValueSingle('Scene.Earths_Magnetosphere.Renderable.maskingEnabled', true);" ..
			"openspace.setPropertyValueSingle('Scene.Earths_Magnetosphere.Renderable.Masking.maskingQuantity', 5.000000);" ..
			"openspace.setPropertyValueSingle('Scene.Earths_Magnetosphere.Renderable.Masking.maskingMinLimit', '0');" ..
			"openspace.setPropertyValueSingle('Scene.Earths_Magnetosphere.Renderable.Masking.maskingMaxLimit', '0.5');" ..

			"openspace.setPropertyValueSingle('Scene.Sun.Renderable.Layers.ColorLayers.magnetogram-1.Enabled', false);" ..
			"openspace.setPropertyValueSingle('Scene.Sun.Renderable.Layers.ColorLayers.magnetogram-2.Enabled', false);" ..
			"openspace.setPropertyValueSingle('Scene.Sun.Renderable.Layers.ColorLayers.magnetogram-3.Enabled', false);" ..
			"openspace.setPropertyValueSingle('Scene.Sun.Renderable.Layers.ColorLayers.magnetogram-4.Enabled', false);" ..
			"openspace.setPropertyValueSingle('Scene.Sun.Renderable.Layers.ColorLayers.magnetogram-5.Enabled', false);" ..
			"openspace.setPropertyValueSingle('Scene.Sun.Renderable.Layers.ColorLayers.magnetogram-6.Enabled', false);" ..
			"openspace.setPropertyValueSingle('Scene.Sun.Renderable.Layers.ColorLayers.Texture.Enabled', true);",

		Documentation = "Turn on sun glare, reset field line line width, change layer on the Sun to Orange",
		Name = "First transition Emilie",
		GuiPath = "/CCMC/Nodes",
        Local = false
    },
    {
		Key = "Shift+g",
		Command =
			"openspace.setPropertyValueSingle('Scene.SunGlare.Renderable.Enabled', false);",
		Documentation = "Turn on off glare",
		Name = "Second transition Emilie",
		GuiPath = "/CCMC/Nodes",
        Local = false
    },
     {
		Key = "Shift+h",
		Command =
			"openspace.setPropertyValueSingle('Scene.MAS_MHD_StreamNodes.Renderable.Enabled', true);" ..
			"openspace.setPropertyValueSingle('Scene.MAS_MHD_StreamNodes.Renderable.NodeGroup.nodeSize', 5.200000);" ..
			"openspace.setPropertyValueSingle('Scene.MAS_MHD_StreamNodes.Renderable.NodeGroup.nodeSizeLargerFlux', 5.200000);" ..
			"openspace.setPropertyValueSingle('Scene.MAS_MHD_StreamNodes.Renderable.Streams.filterUpper', 0.190000);",
		Documentation = "Turn on off glare",
		Name = "Second transition Emilie",
		GuiPath = "/CCMC/Nodes",
        Local = false
    },
    {
        Key = "i",
        Command = [[
            textureList = openspace.globebrowsing.getLayers('Sun', 'ColorLayers');

            if (textureIndex == nil) then 
                textureIndex = 1;
            end; 

            textureIndex = textureIndex + 1
            if (textureIndex >= #textureList) then
                textureIndex = 1;
            end;

            if (textureIndex == 1) then
                openspace.setPropertyValue("Scene.Sun.Renderable.Layers.ColorLayers.*.Enabled", false);
                openspace.setPropertyValueSingle("Scene.Sun.Renderable.Layers.ColorLayers.Texture.Enabled", true);
            else
                openspace.setPropertyValue("Scene.Sun.Renderable.Layers.ColorLayers.*.Enabled", false);

                str = "Scene.Sun.Renderable.Layers.ColorLayers.magnetogram-" .. textureIndex .. ".Enabled";
                openspace.setPropertyValueSingle(str, true);
            end;

        ]],
        Documentation = "Display next sun texture in list of textures",
        Local = false
    }
}

asset.onInitialize(function ()
    openspace.time.setTime("2000 JUL 14 08:42:00.100")

    sceneHelper.bindKeys(Keybindings)

    openspace.setPropertyValueSingle("Scene.Sun.Renderable.Layers.ColorLayers.Texture.Enabled", false)
    local str = "Scene.Sun.Renderable.Layers.ColorLayers.magnetogram-" .. textureIndex .. ".Enabled";
    openspace.setPropertyValueSingle(str, true)
    
    openspace.setPropertyValueSingle('Scene.Sun.Renderable.Enabled', true)
    openspace.setPropertyValueSingle('Scene.SunGlare.Renderable.Enabled', false)
    --openspace.setPropertyValueSingle("RenderEngine.HorizFieldOfView", 46.910000)
	
	openspace.markInterestingNodes({
        "Earth", "Sun", "Moon"
    });
	
	openspace.navigation.setNavigationState({
        Anchor = sunAsset.Sun.Identifier,
        ReferenceFrame = "Root",
        Position = { -15016171000, 30814181000, -4218126500}
    })
	openspace.setPropertyValueSingle("NavigationHandler.OrbitalNavigator.Anchor", 'MAS_MHD_StreamNodes')
	openspace.setPropertyValueSingle("NavigationHandler.OrbitalNavigator.Aim", '')
	openspace.setPropertyValueSingle("NavigationHandler.OrbitalNavigator.RetargetAnchor", nil)
	openspace.setPropertyValueSingle("Dashboard.Date.Enabled", true)
	openspace.setPropertyValueSingle("Dashboard.Distance.Enabled", false)
	openspace.setPropertyValueSingle("Dashboard.Framerate.Enabled", false)
	openspace.setPropertyValueSingle("Dashboard.GlobeLocation.Enabled", false)
	openspace.setPropertyValueSingle("Dashboard.ParallelConnection.Enabled", false)
	openspace.setPropertyValueSingle("RenderEngine.ShowLog", false)
	openspace.setPropertyValueSingle("RenderEngine.ShowVersion", false)
	openspace.setPropertyValueSingle("RenderEngine.ShowCamera", false)
	openspace.setPropertyValueSingle("Dashboard.Date.FontName", 'Light')
	openspace.setPropertyValueSingle("Scene.geo.Renderable.Enabled", false)
	openspace.setPropertyValueSingle("Scene.gps-ops.Renderable.Enabled", false)
	openspace.setPropertyValueSingle("Scene.stations.Renderable.Enabled", false)
	openspace.setPropertyValueSingle("Scene.tle-new.Renderable.Enabled", false)
	openspace.setPropertyValueSingle("Scene.visual.Renderable.Enabled", false)
	openspace.setPropertyValueSingle("Scene.Earth.Renderable.Layers.ColorLayers.ESRI_VIIRS_Combo.Enabled", false)
	openspace.setPropertyValueSingle("Scene.Earth.Renderable.Layers.ColorLayers.ESRI_World_Imagery.Enabled", true)
	openspace.setPropertyValueSingle("Scene.ISS_trail.Renderable.Enabled", false)
	
	openspace.clearKey('g')
	openspace.clearKey('b')

end)

asset.onDeinitialize(function ()
    sceneHelper.unbindKeys(Keybindings)

    openspace.removeInterestingNodes({
        "Earth", "Sun", "Moon"
    })

    openspace.removeVirtualProperty("*Trail.renderable.Enabled")
end)
