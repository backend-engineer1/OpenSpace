asset.require('./base')

local assetHelper = asset.require('util/asset_helper')
local propertyHelper = asset.require('util/property_helper')
local sceneHelper = asset.require('util/scene_helper')

asset.require('util/default_dashboard')

asset.require('scene/solarsystem/sun/magnetogram_textures')
asset.require('scene/solarsystem/sun/streamnodeslegend')
assetHelper.requestAll(asset, 'scene/solarsystem/sun/heliosphere')

-- must be >0
-- the textureIndex variable is used to select a texture from a list of textures 
textureIndex = 2;
Endtime1 = "2000 JUL 14 19:00:00";
Starttimescript = "openspace.time.setTime('2000 JUL 14 08:34:00')";
Endtime2 = "2000 JUL 14 14:00:00";
script1 = "Scene.MAS_MHD_StreamNodes.Renderable.Color.colorMode";
script2 = "Scene.MAS_MHD_StreamNodes.Renderable.NodeGroup.Skipping Nodes";
script3 = "Scene.MAS_MHD_StreamNodes.Renderable.NodeGroup.AmountofNodes";
script4 = "Scene.MAS_MHD_StreamNodes.Renderable.Color.fluxColorAlpha";
script5 = "Scene.MAS_MHD_StreamNodes.Renderable.NodeGroup.NodeSkipInfo";
script6 = "Scene.MAS_MHD_StreamNodes.Renderable.NodeGroup.nodeSize";
script7 = "Scene.MAS_MHD_StreamNodes.Renderable.NodeGroup.nodeSizeLargerFlux";
script8 = "Scene.MAS_MHD_StreamNodes.Renderable.NodeGroup.Skipping Nodes by Flux";
script9 = "Scene.MAS_MHD_StreamNodes.Renderable.NodeGroup.Skipping Nodes by Radius";
script10 = "Scene.MAS_MHD_StreamNodes.Renderable.Streams.thresholdFlux";
script11 = "Scene.MAS_MHD_StreamNodes.Renderable.Streams.filteringlower";
script12 = "Scene.MAS_MHD_StreamNodes.Renderable.Streams.filteringupper";
script13 = "Scene.MAS_MHD_StreamNodes.Renderable.Streams.limitsZLower"

local Keybindings = {
    {
        Key = "F2",
        Name = "Show Flux Value Legend",
        --Command = "openspace.asset.add('C:/Users/chrad171/openspace/OpenSpace/data/assets/scene/solarsystem/sun/streamnodeslegend')",
        Command = "openspace.setPropertyValueSingle('ScreenSpace.Legendstreamnodes.Enabled', true);",
		Documentation = "Shows or hides the legend image",
        Local = true
    },
    {
        Key = "F3",
        Name = "Show Flux Value Legend",
        --Command = "openspace.asset.remove('C:/Users/chrad171/openspace/OpenSpace/data/assets/scene/solarsystem/sun/streamnodeslegend')",
        Command = "openspace.setPropertyValueSingle('ScreenSpace.Legendstreamnodes.Enabled', false);",
		Documentation = "Shows or hides the legend image",
        Local = true
    },
	{
	Key = "Shift+r",
	Command =
		"openspace.setPropertyValueSingle(script1, 1.000000);" ..
		"openspace.setPropertyValueSingle(script2, 1.000000);" ..
		"openspace.setPropertyValueSingle(script3, 1.000000);" ..
		"openspace.setPropertyValueSingle(script4, 1.000000);" ..
		"openspace.setPropertyValueSingle(script5, 1.000000);" ..
		"openspace.setPropertyValueSingle(script6, 2.000000);" ..
		"openspace.setPropertyValueSingle(script7, 2.00000);" ..
		"openspace.setPropertyValueSingle(script8, 0.000000);" ..
		"openspace.setPropertyValueSingle(script9, 0.000000);" ..
		"openspace.setPropertyValueSingle(script10, 0.000000);" ..
		"openspace.setPropertyValueSingle(script11, 0.000000);" ..
		"openspace.setPropertyValueSingle(script12, 5.000000);",
		--"Todo, fix the last one which is on the z axis"
		--"openspace.setPropertyValueSingle(script13, {--358139527168.969971,953488375808.000000});",
		Documentation = "Resets the visualisation of streamnodes",
	    Name = "Reset Streamnodes Vis back",
	    GuiPath = "/CCMC/Nodes",
	    Local = false
	
	},
	{
	    Key = "Shift+s",
	    Command = 
            "openspace.setPropertyValueSingle('Scene.SunGlare.Renderable.Enabled', true);" ..
            "openspace.setPropertyValueSingle('Scene.Sun.Renderable.Enabled', false);" ..
            "openspace.setPropertyValueSingle('Scene.MAS_MHD_density.Renderable.Enabled', false);" ..
            "openspace.setPropertyValueSingle('Scene.MAS_MHD_Fieldlines.Renderable.Enabled', false);",
	    Documentation = "Resets the subscene for showing the Sun volume rendering + fieldlines",
	    Name = "Reset MHD back",
	    GuiPath = "/CCMC/MHD",
	    Local = false
	},
    {
        Key = "F6",
        Command = propertyHelper.invert('Scene.MAS_MHD_density.Renderable.Enabled'),
        Documentation = "Toggle volume",
        Local = false
    },
    {
	Key = "F7",
		Command = "openspace.scriptScheduler.loadScheduledScript(Endtime2, Starttimescript)",
		Documentation = "Loop time 08:34- 14:00",
		Name = "Loop Nodedata time 08:34 - 14:00",
		GuiPath = "/CCMC/Nodes",
        Local = false
    },
    {
	Key = "F8",
        Command = "openspace.scriptScheduler.loadScheduledScript(Endtime1, Starttimescript)",
        Documentation = "Loop time 08:34- 19:34",
		Name = "Loop Nodedata time 08:34 - 19:34",
		GuiPath = "/CCMC/Nodes",
        Local = false
    },
    {
	Key = "F9",
        Command = "openspace.scriptScheduler.clear()",
        Documentation = "Clear scriptScheduler",
		Name = "Clear loopscripts",
		GuiPath = "/CCMC/Nodes",
        Local = false
    },
    {
        Key = "i",
        Command = [[
            textureList = openspace.globebrowsing.getLayers('Sun', 'ColorLayers');

            if (textureIndex == nil) then 
                textureIndex = 1;
            end; 

            textureIndex = textureIndex + 1
            if (textureIndex >= #textureList) then
                textureIndex = 1;
            end;

            if (textureIndex == 1) then
                openspace.setPropertyValue("Scene.Sun.Renderable.Layers.ColorLayers.*.Enabled", false);
                openspace.setPropertyValueSingle("Scene.Sun.Renderable.Layers.ColorLayers.Texture.Enabled", true);
            else
                openspace.setPropertyValue("Scene.Sun.Renderable.Layers.ColorLayers.*.Enabled", false);

                str = "Scene.Sun.Renderable.Layers.ColorLayers.magnetogram-" .. textureIndex .. ".Enabled";
                openspace.setPropertyValueSingle(str, true);
            end;

        ]],
        Documentation = "Display next sun texture in list of textures",
        Local = false
    }
}

local sunAsset = asset.require('scene/solarsystem/sun/sun');    --heliosphere/mas/bastille_day/

asset.onInitialize(function ()
    openspace.time.setTime("2000 JUL 14 08:33:37.100")

    sceneHelper.bindKeys(Keybindings)

    openspace.setPropertyValueSingle("Scene.Sun.Renderable.Layers.ColorLayers.Texture.Enabled", false)
    local str = "Scene.Sun.Renderable.Layers.ColorLayers.magnetogram-" .. textureIndex .. ".Enabled";
    openspace.setPropertyValueSingle(str, true)
    
    openspace.setPropertyValueSingle('Scene.Sun.Renderable.Enabled', true)
    openspace.setPropertyValueSingle('Scene.SunGlare.Renderable.Enabled', false)
	
	openspace.markInterestingNodes({
        "Earth", "Sun", "Moon"
    });
	
	openspace.navigation.setNavigationState({
        Anchor = sunAsset.Sun.Identifier,
        ReferenceFrame = "Root",
        Position = { -15016171000, 30814181000, -4218126500}
    })

end)

asset.onDeinitialize(function ()
    sceneHelper.unbindKeys(Keybindings)

    openspace.removeInterestingNodes({
        "Earth", "Sun", "Moon"
    })

    openspace.removeVirtualProperty("*Trail.renderable.Enabled")
end)
