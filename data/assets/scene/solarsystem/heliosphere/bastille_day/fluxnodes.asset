local assetHelper = asset.require('util/asset_helper')
local heliosphereTransforms = asset.require('scene/solarsystem/sun/transforms_heliosphere')
local propertyHelper = asset.require('util/property_helper')
local rot = asset.require('./carringtonToHEEQRotation.asset')

local fluxNodesBinaries = asset.syncedResource({
  Name = "Bastille day Flux nodes binaries",
  Type = "HttpSynchronization",
  Identifier = "bastille_day_streamnodes_binaries",
  Version = 1
})

-- FluxNodes from binaries
local fluxNodes = {
  Identifier = "MAS-MHD-FluxNodes-bastille-day",
  Parent = heliosphereTransforms.HEEQ180ReferenceFrame.Identifier,
  Transform = {
    Rotation = rot.CarringtonLongitudeToHEEQ180Rotation
  },
  Renderable = {
    Type = "RenderableFluxNodes",
    SourceFolder = fluxNodesBinaries,
    ColorTablePaths = asset.localResource("transferfunctions/CMR.txt"),
    LoadAtRuntime = true,
    --ScaleToMeters = 1.0,
    SecondsBefore = 24*60*60,
    SecondsAfter = 24*60*60,
    Enabled = true
  },
  GUI = {
    Path = "/Solar System/Heliosphere/Bastille Day",
    Name = "Flux Nodes"
  }
}

local toggle_fluxnodes = {
  Identifier = "fluxnodes.toggle_fluxnodes",
  Name = "Toggle flux nodes",
  Command = propertyHelper.invert("Scene.MAS-MHD-FluxNodes-bastille-day.Renderable.Enabled"),
  Documentation = "Toggle flux node rendering of CME",
  GuiPath = "/Bastille-Day",
  IsLocal = false
}

asset.onInitialize(function ()
  openspace.action.registerAction(toggle_fluxnodes)
end)
asset.onDeinitialize(function ()
  openspace.action.removeAction(toggle_fluxnodes.Identifier)
end)
assetHelper.registerSceneGraphNodesAndExport(asset, { fluxNodes })

asset.meta = {
  Name = "Predictive Science Inc. Flux nodes Bastille Day",
  Version = "1.0",
  Description = "Flux nodes for the bastille day CME event",
  Author = "CCMC, Christian Adamsson, Emilie Ho",
  URL = "https://dx.doi.org/10.3847/1538-4357/aab36d",
  License = "CC-BY",
  Identifier = {"MAS-MHD-FluxNodes-bastille-day"}
}
