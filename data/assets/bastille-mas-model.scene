asset.require('./base')

local assetHelper = asset.require('util/asset_helper')
local propertyHelper = asset.require('util/property_helper')
local sceneHelper = asset.require('util/scene_helper')

asset.require('util/default_dashboard')

asset.require('scene/solarsystem/sun/magnetogram_textures')
-- asset.require('scene/solarsystem/sun/streamnodeslegend')
assetHelper.requestAll(asset, 'scene/solarsystem/sun/heliosphere')

-- must be >0
-- the textureIndex variable is used to select a texture from a list of textures 
textureIndex = 2;

local Keybindings = {
    {
        Key = "F2",
        Name = "Show Flux Value Legend",
        Command = "openspace.asset.add('C:/Users/emiho502/Desktop/OpenSpace/data/assets/scene/solarsystem/sun/streamnodeslegend')",
        Documentation = "Shows or hides the legend image",
        Local = true
    },
    {
        Key = "F3",
        Name = "Show Flux Value Legend",
        Command = "openspace.asset.remove('C:/Users/emiho502/Desktop/OpenSpace/data/assets/scene/solarsystem/sun/streamnodeslegend')",
        Documentation = "Shows or hides the legend image",
        Local = true
    },
	{
	    Key = "Shift+s",
	    Command = 
            "openspace.setPropertyValueSingle('Scene.SunGlare.Renderable.Enabled', true);" ..
            "openspace.setPropertyValueSingle('Scene.Sun.Renderable.Enabled', false);" ..
            "openspace.setPropertyValueSingle('Scene.MAS_MHD_density.Renderable.Enabled', false);" ..
            "openspace.setPropertyValueSingle('Scene.MAS_MHD_Fieldlines.Renderable.Enabled', false);",
	    Documentation = "Resets the subscene for showing the Sun volume rendering + fieldlines",
	    Name = "Reset MHD back",
	    GuiPath = "/CCMC/MHD",
	    Local = false
	},
    {
        Key = "F6",
        Command = propertyHelper.invert('Scene.MAS_MHD_density.Renderable.Enabled'),
        Documentation = "Toggle volume",
        Local = false
    },
    {
        Key = "F7",
        Command = propertyHelper.invert('Scene.MAS_MHD_Fieldlines.Renderable.Enabled'),
        Documentation = "Toggle fieldlines",
        Local = false
    },
	{
        Key = "F8",
        Command = propertyHelper.invert('Scene.SunGlare.Renderable.Enabled'),
        Documentation = "Toggle sun glare",
        Local = false
    },
    {
        Key = "F9",
        Command = propertyHelper.invert('Scene.Sun.Renderable.Enabled'),
        Documentation = "Toggle sun",
        Local = false
    },
    {
        Key = "i",
        Command = [[
            textureList = openspace.globebrowsing.getLayers('Sun', 'ColorLayers');

            if (textureIndex == nil) then 
                textureIndex = 1;
            end; 

            textureIndex = textureIndex + 1
            if (textureIndex >= #textureList) then
                textureIndex = 1;
            end;

            if (textureIndex == 1) then
                openspace.setPropertyValue("Scene.Sun.Renderable.Layers.ColorLayers.*.Enabled", false);
                openspace.setPropertyValueSingle("Scene.Sun.Renderable.Layers.ColorLayers.Texture.Enabled", true);
            else
                openspace.setPropertyValue("Scene.Sun.Renderable.Layers.ColorLayers.*.Enabled", false);

                str = "Scene.Sun.Renderable.Layers.ColorLayers.magnetogram-" .. textureIndex .. ".Enabled";
                openspace.setPropertyValueSingle(str, true);
            end;

        ]],
        Documentation = "Display next sun texture in list of textures",
        Local = false
    }
}

local sunAsset = asset.require('scene/solarsystem/sun/sun');    --heliosphere/mas/bastille_day/

asset.onInitialize(function ()
    openspace.time.setTime("2000 JUL 14 08:33:37.100")

    sceneHelper.bindKeys(Keybindings)

    openspace.setPropertyValueSingle("Scene.Sun.Renderable.Layers.ColorLayers.Texture.Enabled", false)
    local str = "Scene.Sun.Renderable.Layers.ColorLayers.magnetogram-" .. textureIndex .. ".Enabled";
    openspace.setPropertyValueSingle(str, true)
    
    openspace.setPropertyValueSingle('Scene.Sun.Renderable.Enabled', true)
    openspace.setPropertyValueSingle('Scene.SunGlare.Renderable.Enabled', false)
	
	openspace.markInterestingNodes({
        "Earth", "Sun", "Moon"
    });
	
	openspace.navigation.setNavigationState({
        Anchor = sunAsset.Sun.Identifier,
        ReferenceFrame = "Root",
        Position = { -15016171000, 30814181000, -4218126500}
    })

end)

asset.onDeinitialize(function ()
    sceneHelper.unbindKeys(Keybindings)

    openspace.removeInterestingNodes({
        "Earth", "Sun", "Moon"
    })

    openspace.removeVirtualProperty("*Trail.renderable.Enabled")
end)
