
layout (binding = 0, r32ui) uniform uimage2D anchorPointerTexture;
layout (binding = 1, rgba32ui) uniform uimageBuffer fragmentTexture;
layout (binding = 0, offset = 0) uniform atomic_uint atomicCounterBuffer;

void addToBuffer(ABufferStruct_t frag) {

	uint index = atomicCounterIncrement(atomicCounterBuffer);
    uint old_head = imageAtomicExchange(anchorPointerTexture, ivec2(gl_FragCoord.xy), index);
    _next_(frag,old_head);
	imageStore(fragmentTexture, int(index), _uvec4_(frag));
}