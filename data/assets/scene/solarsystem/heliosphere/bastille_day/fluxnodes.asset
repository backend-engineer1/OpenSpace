local assetHelper = asset.require('util/asset_helper')
local heliosphereTransforms = asset.require('scene/solarsystem/sun/transforms_heliosphere')

local transferFunctions = asset.localResource("transferfunctions")
local fluxnodeColorTable = transferFunctions .. "/flux-nodes.txt"
local fluxnodeColorTableCMR = transferFunctions .. "/CMR.txt"
local fluxnodeColorTableEarth = transferFunctions .. "/flux-nodes-grey-scale.txt"
local fluxnodeColorTableFlow = transferFunctions .. "/flux-nodes-flow.txt"

local fluxnodesBinaries = asset.syncedResource({
  Name = "Bastille day Flux nodes binaries",
  Type = "HttpSynchronization",
  Identifier = "bastille_day_streamnodes_binaries",
  Version = 1
})

-- Fluxnodes from binaries
local Fluxnodes = {
  Identifier = "MAS_MHD_FluxNodes",
  Parent = heliosphereTransforms.HEEQ180ReferenceFrame.Identifier,
  Transform = {
    Scale = {
      Type = "StaticScale",
      Scale = 1
    },
    Rotation = {
      -- This is a rotation matrix to go from Carrington longitude referens frame to HEEQ180
      -- which is what the renderables parent transforms.HEEQ180ReferenceFrame.Identifier is
      -- referring to. At the reference time, MAS_seq = 0, 2000-07-14T08:33:37.105 the Carrington
      -- longitude was 309.3 degrees.
      -- Difference from HEEQ => 360-309.3=50.7
      -- (or 0-309.3 = -309.3 However this leads to the same rotation matrix in the end)
      -- Since OpenSpace supports HEEQ180 and not HEEQ, 180 was added or subtracted
      -- => a1 = -129.3 and a2 = 230.7
      -- Rotation matrix: (cos a, -sin a, 0)(sin a, cos a, 0)(0, 0, 1) leads to the result.
      Type = "FixedRotation",
        XAxis = { -0.63338087262755016203262119192353, -0.77384020972650618518999944537717, 0.0 },
        YAxis = { 0.77384020972650618518999944537717, -0.63338087262755016203262119192353, 0.0 },
        ZAxis = { 0.0, 0.0, 1.0 }
    }
  },
  Renderable = {
    Type = "RenderableFluxNodes",
    SourceFolder = fluxnodesBinaries,
    ColorTablePaths = {
      Standard = fluxnodeColorTable,
      CMR = fluxnodeColorTableCMR,
      Earth = fluxnodeColorTableEarth,
      Flow = fluxnodeColorTableFlow,
    },

    LoadAtRuntime = true,
    ScaleToMeters = 1.0,
    SecondsBefore = 24*60*60,
    SecondsAfter = 24*60*60,
    Enabled = false
  },
  GUI = {
    Path = "/Solar System/Heliosphere",
    Name = "Fluxnodes"
  }
}

assetHelper.registerSceneGraphNodesAndExport(asset, { Fluxnodes })

asset.meta = {
  Name = "Predictive Science Inc. Flux nodes Bastille Day",
  Version = "1.0",
  Description = "Flux nodes for the bastille day CME event",
  Author = "CCMC, Christian Adamsson, Emilie Ho",
  URL = "https://dx.doi.org/10.3847/1538-4357/aab36d",
  License = ""
}
