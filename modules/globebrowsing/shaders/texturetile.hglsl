/*****************************************************************************************
 *                                                                                       *
 * OpenSpace                                                                             *
 *                                                                                       *
 * Copyright (c) 2014                                                                    *
 *                                                                                       *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this  *
 * software and associated documentation files (the "Software"), to deal in the Software *
 * without restriction, including without limitation the rights to use, copy, modify,    *
 * merge, publish, distribute, sublicense, and/or sell copies of the Software, and to    *
 * permit persons to whom the Software is furnished to do so, subject to the following   *
 * conditions:                                                                           *
 *                                                                                       *
 * The above copyright notice and this permission notice shall be included in all copies *
 * or substantial portions of the Software.                                              *
 *                                                                                       *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,   *
 * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A         *
 * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT    *
 * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF  *
 * CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE  *
 * OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.                                         *
 ****************************************************************************************/

#ifndef TEXTURETILE_HGLSL
#define TEXTURETILE_HGLSL

struct TileDepthTransform {
    float depthScale;
    float depthOffset;
};

struct TileUvTransform {
    vec2 uvOffset;
    vec2 uvScale;
};

struct TextureTile {
	sampler2D textureSampler;
	
	TileDepthTransform depthTransform;
	TileUvTransform uvTransform;
};

vec4 patchBorderOverlay(vec2 uv, vec3 borderColor, float borderSize) {
	vec2 uvOffset = uv - vec2(0.5);
	float thres = 0.5 - borderSize/2;
	bool isBorder = abs(uvOffset.x) > thres || abs(uvOffset.y) > thres;
	vec3 color = isBorder ? borderColor : vec3(0);
	return vec4(color, 0);
}

vec4 getTexVal(const TextureTile tile, const vec2 tileUV){
	vec2 samplePos = tile.uvTransform.uvOffset + tile.uvTransform.uvScale * tileUV;
	vec4 texVal = texture(tile.textureSampler, samplePos);
	return texVal;
}

vec4 getTransformedTexVal(const TileDepthTransform transform, const vec4 val){
	return transform.depthOffset + transform.depthScale * val;
}

float getTransformedTexVal(const TileDepthTransform transform, const float val){
	return transform.depthOffset + transform.depthScale * val;
}

#endif // TEXTURETILE_HGLSL